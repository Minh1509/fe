{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ki 2 nam 3\\\\Web\\\\project_photosharing\\\\fe\\\\src\\\\components\\\\UserPhotos\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Typography, Button, TextField } from \"@mui/material\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { fetchModel } from \"../../lib/fetchModelData\";\nimport axios from \"axios\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchUserById = async userId => {\n  try {\n    const userDetails = await axios.get(`http://localhost:8081/api/user/${userId}`);\n    return userDetails.data ? `${userDetails.data.first_name} ${userDetails.data.last_name}` : \"Unknown User\";\n  } catch (error) {\n    console.error(\"Error fetching user data:\", error);\n    return \"Unknown User\";\n  }\n};\nconst fetchUsersForComments = async photos => {\n  try {\n    // Map over all comments and fetch user details asynchronously\n    const userPromises = photos.flatMap(photo => photo.comments.map(comment => fetchUserById(comment.user_id)));\n    const users = await Promise.all(userPromises);\n    return users;\n  } catch (error) {\n    console.error(\"Error fetching user data:\", error);\n    return [];\n  }\n};\nfunction UserPhotos({\n  userLoginId\n}) {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [photos, setPhotos] = useState([]);\n  const [user, setUser] = useState(null);\n  const [commentUsers, setCommentUsers] = useState([]);\n  const [commentTexts, setCommentTexts] = useState([]);\n  const fetchUserPhotos = async () => {\n    try {\n      const userPhotos = await axios.get(`http://localhost:8081/api/photo/photosOfUser/${userId}`);\n      setPhotos(userPhotos.data);\n\n      // Fetch user details\n      const userDetails = await axios.get(`http:localhost:8081/api/user/${userId}`);\n      setUser(userDetails.data);\n    } catch (error) {\n      console.error(\"Error fetching user photos:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUserPhotos();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userId]);\n  useEffect(() => {\n    // Fetch user details for all comments when photos change\n    const fetchUsers = async () => {\n      const users = await fetchUsersForComments(photos);\n      setCommentUsers(users);\n    };\n    fetchUsers();\n  }, [photos]);\n  const handleCommentSubmit = async photoId => {\n    try {\n      const response = await axios.post(`http://localhost:8081/api/photo/commentsOfPhoto/${photoId}`, {\n        comment: commentTexts[photoId],\n        userId: userLoginId\n      });\n\n      // Clear the comment input field\n      setCommentTexts(prevState => ({\n        ...prevState,\n        [photoId]: \"\"\n      }));\n\n      // Refetch the photos to update the comments\n      fetchUserPhotos();\n    } catch (error) {\n      console.error(\"Error submitting comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      className: \"header\",\n      children: \"User Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), userLoginId === userId && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: Link,\n      to: \"/photos/add\",\n      className: \"add-photo-button\",\n      children: \"Add Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-photos-container\",\n      children: photos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:8081/api/photo/images/${photo.file_name}`,\n          alt: user === null || user === void 0 ? void 0 : user.first_name,\n          className: \"photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"posted-time\",\n          children: [\"Posted time: \", photo.date_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Add a comment\",\n          variant: \"outlined\",\n          value: commentTexts[photo._id] || \"\" // Lấy giá trị từ commentTexts\n          ,\n          onChange: e => setCommentTexts(prevState => ({\n            ...prevState,\n            [photo._id]: e.target.value\n          })) // Cập nhật giá trị trong commentTexts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => handleCommentSubmit(photo._id),\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"comments-header\",\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), photo.comments && photo.comments.map((comment, commentIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `comment ${comment.user_id === userId ? \"user-comment\" : \"other-comment\"}`,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: \"comment-time\",\n            children: [comment.comment, \" (\", comment.date_time, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: \"comment-text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this))]\n      }, photo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPhotos, \"6tVLwJNVt195KEtqJIoC5AOd6R0=\", false, function () {\n  return [useParams];\n});\n_c = UserPhotos;\nexport default UserPhotos;\nvar _c;\n$RefreshReg$(_c, \"UserPhotos\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Typography","Button","TextField","useParams","Link","fetchModel","axios","jsxDEV","_jsxDEV","fetchUserById","userId","userDetails","get","data","first_name","last_name","error","console","fetchUsersForComments","photos","userPromises","flatMap","photo","comments","map","comment","user_id","users","Promise","all","UserPhotos","userLoginId","_s","setPhotos","user","setUser","commentUsers","setCommentUsers","commentTexts","setCommentTexts","fetchUserPhotos","userPhotos","fetchUsers","handleCommentSubmit","photoId","response","post","prevState","children","variant","className","fileName","_jsxFileName","lineNumber","columnNumber","color","component","to","src","file_name","alt","date_time","label","value","_id","onChange","e","target","onClick","commentIndex","_c","$RefreshReg$"],"sources":["E:/Ki 2 nam 3/Web/project_photosharing/fe/src/components/UserPhotos/index.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Typography, Button, TextField } from \"@mui/material\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { fetchModel } from \"../../lib/fetchModelData\";\nimport axios from \"axios\";\nimport \"./styles.css\";\n\nconst fetchUserById = async (userId) => {\n  try {\n    const userDetails = await axios.get(\n      `http://localhost:8081/api/user/${userId}`\n    );\n    return userDetails.data\n      ? `${userDetails.data.first_name} ${userDetails.data.last_name}`\n      : \"Unknown User\";\n  } catch (error) {\n    console.error(\"Error fetching user data:\", error);\n    return \"Unknown User\";\n  }\n};\nconst fetchUsersForComments = async (photos) => {\n  try {\n    // Map over all comments and fetch user details asynchronously\n    const userPromises = photos.flatMap((photo) =>\n      photo.comments.map((comment) => fetchUserById(comment.user_id))\n    );\n    const users = await Promise.all(userPromises);\n    return users;\n  } catch (error) {\n    console.error(\"Error fetching user data:\", error);\n    return [];\n  }\n};\nfunction UserPhotos({ userLoginId }) {\n  const { userId } = useParams();\n  const [photos, setPhotos] = useState([]);\n  const [user, setUser] = useState(null);\n  const [commentUsers, setCommentUsers] = useState([]);\n  const [commentTexts, setCommentTexts] = useState([]);\n\n  const fetchUserPhotos = async () => {\n    try {\n      const userPhotos = await axios.get(`http://localhost:8081/api/photo/photosOfUser/${userId}`);\n      setPhotos(userPhotos.data);\n\n      // Fetch user details\n      const userDetails = await axios.get(`http:localhost:8081/api/user/${userId}`);\n      setUser(userDetails.data);\n    } catch (error) {\n      console.error(\"Error fetching user photos:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchUserPhotos();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userId]);\n\n  useEffect(() => {\n    // Fetch user details for all comments when photos change\n    const fetchUsers = async () => {\n      const users = await fetchUsersForComments(photos);\n      setCommentUsers(users);\n    };\n\n    fetchUsers();\n  }, [photos]);\n\n  const handleCommentSubmit = async (photoId) => {\n    try {\n      const response = await axios.post(\n        `http://localhost:8081/api/photo/commentsOfPhoto/${photoId}`,\n        {\n          comment: commentTexts[photoId],\n          userId: userLoginId,\n        }\n      );\n      \n\n      // Clear the comment input field\n      setCommentTexts((prevState) => ({ ...prevState, [photoId]: \"\" }));\n\n      // Refetch the photos to update the comments\n      fetchUserPhotos();\n    } catch (error) {\n      console.error(\"Error submitting comment:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\" className=\"header\">\n        User Photos\n      </Typography>\n      {userLoginId === userId && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          component={Link}\n          to=\"/photos/add\"\n          className=\"add-photo-button\"\n        >\n          Add Photo\n        </Button>\n      )}\n      <div className=\"user-photos-container\">\n        {photos.map((photo) => (\n          <div key={photo._id} className=\"photo-container\">\n            <img\n              src={`http://localhost:8081/api/photo/images/${photo.file_name}`}\n              alt={user?.first_name}\n              className=\"photo\"\n            />\n            <Typography className=\"posted-time\">\n              Posted time: {(photo.date_time)}\n            </Typography>\n            {/* UI for adding comments */}\n            <TextField\n              label=\"Add a comment\"\n              variant=\"outlined\"\n              value={commentTexts[photo._id] || \"\"} // Lấy giá trị từ commentTexts\n              onChange={(e) =>\n                setCommentTexts((prevState) => ({\n                  ...prevState,\n                  [photo._id]: e.target.value,\n                }))\n              } // Cập nhật giá trị trong commentTexts\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => handleCommentSubmit(photo._id)}\n            >\n              Add Comment\n            </Button>\n            {/* Display existing comments */}\n            <Typography className=\"comments-header\">Comments:</Typography>\n            {photo.comments &&\n              photo.comments.map((comment, commentIndex) => (\n                <div\n                  key={comment._id}\n                  className={`comment ${\n                    comment.user_id === userId\n                      ? \"user-comment\"\n                      : \"other-comment\"\n                  }`}\n                >\n                  \n                  <Typography className=\"comment-time\">\n                  {comment.comment} ({(comment.date_time)})\n                  </Typography>\n                  <Typography className=\"comment-text\">\n                    \n                  </Typography>\n                </div>\n              ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default UserPhotos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}